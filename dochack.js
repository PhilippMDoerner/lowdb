/* Generated by the Nim Compiler v2.1.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI721420302 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078605 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078611 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555169 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555176 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555174 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555174 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555174.node = NNI33555174;
NTI33555176.base = NTI33555173;
NTI33555177.base = NTI33555173;
var NNI33555173 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555176, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555177, name: "up", sons: null}]};
NTI33555173.node = NNI33555173;
var NNI33555169 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555169.node = NNI33555169;
NTI33555173.base = NTI33555169;
NTI33555174.base = NTI33555173;
NTI134217741.base = NTI33555174;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555174;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555174;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555174;
var NNI973078611 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI973078605, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI973078611.node = NNI973078611;
var NNI721420302 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI721420302.node = NNI721420302;

function mnewString(len_33556985) {
        return new Array(len_33556985);
  

  
}

function toJSStr(s_33556886) {
  var result_33556887 = null;

    var res_33556928 = newSeq_33556904((s_33556886).length);
    var i_33556929 = 0;
    var j_33556930 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556929 < (s_33556886).length)) break Label2;
          var c_33556931 = s_33556886[i_33556929];
          if ((c_33556931 < 128)) {
          res_33556928[j_33556930] = String.fromCharCode(c_33556931);
          i_33556929 += 1;
          }
          else {
            var helper_33556943 = newSeq_33556904(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556944 = c_33556931.toString(16);
                  if ((((code_33556944) == null ? 0 : (code_33556944).length) == 1)) {
                  helper_33556943.push("%0");;
                  }
                  else {
                  helper_33556943.push("%");;
                  }
                  
                  helper_33556943.push(code_33556944);;
                  i_33556929 += 1;
                  if ((((s_33556886).length <= i_33556929) || (s_33556886[i_33556929] < 128))) {
                  break Label3;
                  }
                  
                  c_33556931 = s_33556886[i_33556929];
                }
            };
++excHandler;
            try {
            res_33556928[j_33556930] = decodeURIComponent(helper_33556943.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556928[j_33556930] = helper_33556943.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556930 += 1;
        }
    };
    if (res_33556928.length < j_33556930) { for (var i = res_33556928.length ; i < j_33556930 ; ++i) res_33556928.push(null); }
               else { res_33556928.length = j_33556930; };
    result_33556887 = res_33556928.join("");

  return result_33556887;

}

function raiseException(e_33556638, ename_33556639) {
    e_33556638.name = ename_33556639;
    if ((excHandler == 0)) {
    unhandledException(e_33556638);
    }
    
    throw e_33556638;

  
}

function addInt(a_33557032, b_33557033) {
        var result = a_33557032 + b_33557033;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557306, a_33557307, b_33557308) {
  var result_33557309 = 0;

  BeforeRet: {
    if (((a_33557307 <= i_33557306) && (i_33557306 <= b_33557308))) {
    result_33557309 = i_33557306;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557309;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557250, src_33557251, ti_33557252) {
  var result_33557261 = null;

    switch (ti_33557252.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557241(ti_33557252))) {
      result_33557261 = src_33557251;
      }
      else {
        result_33557261 = [src_33557251[0], src_33557251[1]];
      }
      
      break;
    case 19:
            if (dest_33557250 === null || dest_33557250 === undefined) {
        dest_33557250 = {};
      }
      else {
        for (var key in dest_33557250) { delete dest_33557250[key]; }
      }
      for (var key in src_33557251) { dest_33557250[key] = src_33557251[key]; }
      result_33557261 = dest_33557250;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557252.base == null))) {
      result_33557261 = nimCopy(dest_33557250, src_33557251, ti_33557252.base);
      }
      else {
      if ((ti_33557252.kind == 17)) {
      result_33557261 = (dest_33557250 === null || dest_33557250 === undefined) ? {m_type: ti_33557252} : dest_33557250;
      }
      else {
        result_33557261 = (dest_33557250 === null || dest_33557250 === undefined) ? {} : dest_33557250;
      }
      }
      nimCopyAux(result_33557261, src_33557251, ti_33557252.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557251)) { 
        if(dest_33557250 === null || dest_33557250 === undefined || dest_33557250.length != src_33557251.length) {
          dest_33557250 = new src_33557251.constructor(src_33557251);
        } else {
          dest_33557250.set(src_33557251, 0);
        }
        result_33557261 = dest_33557250;
      } else {
        if (src_33557251 === null) {
          result_33557261 = null;
        }
        else {
          if (dest_33557250 === null || dest_33557250 === undefined || dest_33557250.length != src_33557251.length) {
            dest_33557250 = new Array(src_33557251.length);
          }
          result_33557261 = dest_33557250;
          for (var i = 0; i < src_33557251.length; ++i) {
            result_33557261[i] = nimCopy(result_33557261[i], src_33557251[i], ti_33557252.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557251 === null) {
        result_33557261 = null;
      }
      else {
        if (dest_33557250 === null || dest_33557250 === undefined || dest_33557250.length != src_33557251.length) {
          dest_33557250 = new Array(src_33557251.length);
        }
        result_33557261 = dest_33557250;
        for (var i = 0; i < src_33557251.length; ++i) {
          result_33557261[i] = nimCopy(result_33557261[i], src_33557251[i], ti_33557252.base);
        }
      }
    
      break;
    case 28:
            if (src_33557251 !== null) {
        result_33557261 = src_33557251.slice(0);
      }
    
      break;
    default: 
      result_33557261 = src_33557251;
      break;
    }

  return result_33557261;

}

function chckIndx(i_33557301, a_33557302, b_33557303) {
  var result_33557304 = 0;

  BeforeRet: {
    if (((a_33557302 <= i_33557301) && (i_33557301 <= b_33557303))) {
    result_33557304 = i_33557301;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557301, a_33557302, b_33557303);
    }
    
  };

  return result_33557304;

}

function makeNimstrLit(c_33556880) {
      var result = [];
  for (var i = 0; i < c_33556880.length; ++i) {
    result[i] = c_33556880.charCodeAt(i);
  }
  return result;
  

  
}

function subInt(a_33557036, b_33557037) {
        var result = a_33557036 - b_33557037;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556883) {
      var ln = c_33556883.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556883.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556883.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_33557040, b_33557041) {
        var result = a_33557040 * b_33557041;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);
var ConstSet9 = setConstr([65, 90], [97, 122]);

function nimMax(a_33557090, b_33557091) {
    var Temporary1;

  var result_33557092 = 0;

  BeforeRet: {
    if ((b_33557091 <= a_33557090)) {
    Temporary1 = a_33557090;
    }
    else {
    Temporary1 = b_33557091;
    }
    
    result_33557092 = Temporary1;
    break BeforeRet;
  };

  return result_33557092;

}

function nimMin(a_33557086, b_33557087) {
    var Temporary1;

  var result_33557088 = 0;

  BeforeRet: {
    if ((a_33557086 <= b_33557087)) {
    Temporary1 = a_33557086;
    }
    else {
    Temporary1 = b_33557087;
    }
    
    result_33557088 = Temporary1;
    break BeforeRet;
  };

  return result_33557088;

}

function addChar(x_33557397, c_33557398) {
    x_33557397.push(c_33557398);

  
}
var objectID_1207959727 = [0];

function setTheme(theme_570425350) {
    document.documentElement.setAttribute("data-theme", theme_570425350);
    window.localStorage.setItem("theme", theme_570425350);

  
}

function add_33556361(x_33556362, x_33556362_Idx, y_33556363) {
          if (x_33556362[x_33556362_Idx] === null) { x_33556362[x_33556362_Idx] = []; }
      var off = x_33556362[x_33556362_Idx].length;
      x_33556362[x_33556362_Idx].length += y_33556363.length;
      for (var i = 0; i < y_33556363.length; ++i) {
        x_33556362[x_33556362_Idx][off+i] = y_33556363.charCodeAt(i);
      }
    

  
}

function newSeq_33556904(len_33556906) {
  var result_33556907 = [];

    result_33556907 = new Array(len_33556906); for (var i = 0 ; i < len_33556906 ; ++i) { result_33556907[i] = null; }
  return result_33556907;

}

function unhandledException(e_33556634) {
    var buf_33556635 = [[]];
    if (!(((e_33556634.message).length == 0))) {
    buf_33556635[0].push.apply(buf_33556635[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556635[0].push.apply(buf_33556635[0], e_33556634.message);;
    }
    else {
    buf_33556635[0].push.apply(buf_33556635[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556635[0].push.apply(buf_33556635[0], [32,91]);;
    add_33556361(buf_33556635, 0, e_33556634.name);
    buf_33556635[0].push.apply(buf_33556635[0], [93,10]);;
    var cbuf_33556636 = toJSStr(buf_33556635[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556636);
  }
  else {
    throw cbuf_33556636;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557030) {
        if (a_33557030 > 2147483647 || a_33557030 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990087(result_301990089, result_301990089_Idx, x_301990090, start_301990091, n_301990092) {
    var Temporary1;

    var old_301990093 = (result_301990089[result_301990089_Idx]).length;
    if (result_301990089[result_301990089_Idx].length < (Temporary1 = chckRange(addInt(old_301990093, n_301990092), 0, 2147483647), Temporary1)) { for (var i = result_301990089[result_301990089_Idx].length; i < Temporary1; ++i) result_301990089[result_301990089_Idx].push(0); }
         else {result_301990089[result_301990089_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990107 = 0;
      var i_570426536 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570426536 < n_301990092)) break Label4;
            iHEX60gensym4_301990107 = i_570426536;
            result_301990089[result_301990089_Idx][chckIndx(addInt(old_301990093, iHEX60gensym4_301990107), 0, (result_301990089[result_301990089_Idx]).length - 1)] = x_301990090.charCodeAt(chckIndx(addInt(start_301990091, iHEX60gensym4_301990107), 0, (x_301990090).length - 1));
            i_570426536 = addInt(i_570426536, 1);
          }
      };
    };

  
}

function addChars_301990083(result_301990085, result_301990085_Idx, x_301990086) {
    addChars_301990087(result_301990085, result_301990085_Idx, x_301990086, 0, ((x_301990086) == null ? 0 : (x_301990086).length));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addChars_301990083(result_301990109, result_301990109_Idx, ((x_301990110) + ""));

  
}

function addInt_301990126(result_301990127, result_301990127_Idx, x_301990128) {
    addInt_301990108(result_301990127, result_301990127_Idx, BigInt(x_301990128));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990126(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557241(ti_33557242) {
  var result_33557243 = false;

  BeforeRet: {
    result_33557243 = !((ConstSet1[ti_33557242.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557243;

}

function nimCopyAux(dest_33557254, src_33557255, n_33557256) {
    switch (n_33557256.kind) {
    case 0:
      break;
    case 1:
            dest_33557254[n_33557256.offset] = nimCopy(dest_33557254[n_33557256.offset], src_33557255[n_33557256.offset], n_33557256.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557256.sons.length; i++) {
      nimCopyAux(dest_33557254, src_33557255, n_33557256.sons[i]);
    }
    
      break;
    case 3:
            dest_33557254[n_33557256.offset] = nimCopy(dest_33557254[n_33557256.offset], src_33557255[n_33557256.offset], n_33557256.typ);
      for (var i = 0; i < n_33557256.sons.length; ++i) {
        nimCopyAux(dest_33557254, src_33557255, n_33557256.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556797, a_33556798, b_33556799) {
    var Temporary1;

    if ((b_33556799 < a_33556798)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556797) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556798) || [],[32,46,46,32] || [],HEX24_385875976(b_33556799) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function onDOMLoaded(e_570425385) {
            
function HEX3Aanonymous_570425408(event_570425409) {
                event_570425409.target.parentNode.style.display = "none";
                event_570425409.target.parentNode.nextSibling.style.display = "inline";

              
            }

    document.getElementById("theme-select").value = window.localStorage.getItem("theme");
    Label1: {
      var pragmaDots_570425407 = null;
      var colontmp__570426527 = [];
      colontmp__570426527 = document.getElementsByClassName("pragmadots");
      var i_570426529 = 0;
      var L_570426530 = (colontmp__570426527).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426529 < L_570426530)) break Label3;
            pragmaDots_570425407 = colontmp__570426527[chckIndx(i_570426529, 0, (colontmp__570426527).length - 1)];
            pragmaDots_570425407.onclick = HEX3Aanonymous_570425408;
            i_570426529 = addInt(i_570426529, 1);
            if (!(((colontmp__570426527).length == L_570426530))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function isWhitespace_570425749(x_570425750) {
  var result_570425751 = false;

    result_570425751 = (((x_570425750.nodeName == "#text") && !/\S/.test(x_570425750.textContent)) || (x_570425750.nodeName == "#comment"));

  return result_570425751;

}

function toToc_570425752(x_570425753, father_570425754) {
                var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;
      var Temporary15;

    if ((x_570425753.nodeName == "UL")) {
    var f_570425762 = {heading: null, kids: [], sortId: (father_570425754.kids).length, doSort: false};
    var i_570425763 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_570425763 < x_570425753.childNodes.length)) break Label2;
          var nxt_570425764 = addInt(i_570425763, 1);
          Label3: {
              Label4: while (true) {
                if (!(nxt_570425764 < x_570425753.childNodes.length)) Temporary5 = false; else {                  Temporary5 = isWhitespace_570425749(x_570425753.childNodes[nxt_570425764]);                }              if (!Temporary5) break Label4;
                nxt_570425764 = addInt(nxt_570425764, 1);
              }
          };
            if (!(nxt_570425764 < x_570425753.childNodes.length)) Temporary8 = false; else {              Temporary8 = (x_570425753.childNodes[i_570425763].nodeName == "LI");            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = (x_570425753.childNodes[i_570425763].childNodes.length == 1);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = (x_570425753.childNodes[nxt_570425764].nodeName == "UL");            }          if (Temporary6) {
          var e_570425776 = {heading: x_570425753.childNodes[i_570425763].childNodes[0], kids: [], sortId: (f_570425762.kids).length, doSort: false};
          var it_570425777 = x_570425753.childNodes[nxt_570425764];
          Label9: {
            var j_570425782 = 0;
            var colontmp__570426543 = 0;
            colontmp__570426543 = it_570425777.childNodes.length;
            var i_570426544 = 0;
            Label10: {
                Label11: while (true) {
                if (!(i_570426544 < colontmp__570426543)) break Label11;
                  j_570425782 = i_570426544;
                  toToc_570425752(it_570425777.childNodes[j_570425782], e_570425776);
                  i_570426544 = addInt(i_570426544, 1);
                }
            };
          };
          f_570425762.kids.push(e_570425776);;
          i_570425763 = addInt(nxt_570425764, 1);
          }
          else {
            toToc_570425752(x_570425753.childNodes[i_570425763], f_570425762);
            i_570425763 = addInt(i_570425763, 1);
          }
          
        }
    };
    father_570425754.kids.push(f_570425762);;
    }
    else {
    if (isWhitespace_570425749(x_570425753)) {
    }
    else {
    if ((x_570425753.nodeName == "LI")) {
    var idx_570425799 = [];
    Label12: {
      var i_570425804 = 0;
      var colontmp__570426547 = 0;
      colontmp__570426547 = x_570425753.childNodes.length;
      var i_570426548 = 0;
      Label13: {
          Label14: while (true) {
          if (!(i_570426548 < colontmp__570426547)) break Label14;
            i_570425804 = i_570426548;
            if (!(isWhitespace_570425749(x_570425753.childNodes[i_570425804]))) {
            idx_570425799.push(i_570425804);;
            }
            
            i_570426548 = addInt(i_570426548, 1);
          }
      };
    };
      if (!((idx_570425799).length == 2)) Temporary15 = false; else {        Temporary15 = (x_570425753.childNodes[idx_570425799[chckIndx(1, 0, (idx_570425799).length - 1)]].nodeName == "UL");      }    if (Temporary15) {
    var e_570425820 = {heading: x_570425753.childNodes[idx_570425799[chckIndx(0, 0, (idx_570425799).length - 1)]], kids: [], sortId: (father_570425754.kids).length, doSort: false};
    var it_570425821 = x_570425753.childNodes[idx_570425799[chckIndx(1, 0, (idx_570425799).length - 1)]];
    Label16: {
      var j_570425826 = 0;
      var colontmp__570426551 = 0;
      colontmp__570426551 = it_570425821.childNodes.length;
      var i_570426552 = 0;
      Label17: {
          Label18: while (true) {
          if (!(i_570426552 < colontmp__570426551)) break Label18;
            j_570425826 = i_570426552;
            toToc_570425752(it_570425821.childNodes[j_570425826], e_570425820);
            i_570426552 = addInt(i_570426552, 1);
          }
      };
    };
    father_570425754.kids.push(e_570425820);;
    }
    else {
      Label19: {
        var i_570425835 = 0;
        var colontmp__570426555 = 0;
        colontmp__570426555 = x_570425753.childNodes.length;
        var i_570426556 = 0;
        Label20: {
            Label21: while (true) {
            if (!(i_570426556 < colontmp__570426555)) break Label21;
              i_570425835 = i_570426556;
              toToc_570425752(x_570425753.childNodes[i_570425835], father_570425754);
              i_570426556 = addInt(i_570426556, 1);
            }
        };
      };
    }
    
    }
    else {
    father_570425754.kids.push({heading: x_570425753, kids: [], sortId: (father_570425754.kids).length, doSort: false});;
    }
    }}

  
}

function extractItems_570425541(x_570425542, heading_570425543, items_570425544, items_570425544_Idx) {
  BeforeRet: {
    if ((x_570425542 == null)) {
    break BeforeRet;
    }
    
    if ((!((x_570425542.heading == null)) && (x_570425542.heading.textContent == heading_570425543))) {
    Label1: {
      var i_570425561 = 0;
      var colontmp__570426559 = 0;
      colontmp__570426559 = (x_570425542.kids).length;
      var i_570426560 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426560 < colontmp__570426559)) break Label3;
            i_570425561 = i_570426560;
            items_570425544[items_570425544_Idx].push(x_570425542.kids[chckIndx(i_570425561, 0, (x_570425542.kids).length - 1)].heading);;
            i_570426560 = addInt(i_570426560, 1);
          }
      };
    };
    }
    else {
      Label4: {
        var k_570425586 = null;
        var i_570426564 = 0;
        var L_570426565 = (x_570425542.kids).length;
        Label5: {
            Label6: while (true) {
            if (!(i_570426564 < L_570426565)) break Label6;
              k_570425586 = x_570425542.kids[chckIndx(i_570426564, 0, (x_570425542.kids).length - 1)];
              extractItems_570425541(k_570425586, heading_570425543, items_570425544, items_570425544_Idx);
              i_570426564 = addInt(i_570426564, 1);
              if (!(((x_570425542.kids).length == L_570426565))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };

  
}

function tree_570425473(tag_570425474, kids_570425475) {
  var result_570425476 = null;

    result_570425476 = document.createElement(tag_570425474);
    Label1: {
      var k_570425489 = null;
      var i_570426577 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426577 < (kids_570425475).length)) break Label3;
            k_570425489 = kids_570425475[chckIndx(i_570426577, 0, (kids_570425475).length - 1)];
            result_570425476.appendChild(k_570425489);
            i_570426577 = addInt(i_570426577, 1);
          }
      };
    };

  return result_570425476;

}

function text_570425497(s_570425498) {
  var result_570425499 = null;

    result_570425499 = document.createTextNode(s_570425498);

  return result_570425499;

}

function uncovered_570425939(x_570425940) {
    var Temporary1;

  var result_570425941 = null;

  BeforeRet: {
    if ((((x_570425940.kids).length == 0) && !((x_570425940.heading == null)))) {
    if (!(x_570425940.heading.hasOwnProperty('__karaxMarker__'))) {
    Temporary1 = x_570425940;
    }
    else {
    Temporary1 = null;
    }
    
    result_570425941 = Temporary1;
    break BeforeRet;
    }
    
    result_570425941 = {heading: x_570425940.heading, kids: [], sortId: x_570425940.sortId, doSort: x_570425940.doSort};
    Label2: {
      var k_570425956 = null;
      var i_570426584 = 0;
      var L_570426585 = (x_570425940.kids).length;
      Label3: {
          Label4: while (true) {
          if (!(i_570426584 < L_570426585)) break Label4;
            k_570425956 = x_570425940.kids[chckIndx(i_570426584, 0, (x_570425940.kids).length - 1)];
            var y_570425957 = uncovered_570425939(k_570425956);
            if (!((y_570425957 == null))) {
            result_570425941.kids.push(y_570425957);;
            }
            
            i_570426584 = addInt(i_570426584, 1);
            if (!(((x_570425940.kids).length == L_570426585))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((result_570425941.kids).length == 0)) {
    result_570425941 = null;
    }
    
  };

  return result_570425941;

}

function mergeTocs_570425969(orig_570425970, news_570425971) {
  var result_570425972 = null;

    result_570425972 = uncovered_570425939(orig_570425970);
    if ((result_570425972 == null)) {
    result_570425972 = news_570425971;
    }
    else {
      Label1: {
        var i_570425984 = 0;
        var colontmp__570426580 = 0;
        colontmp__570426580 = (news_570425971.kids).length;
        var i_570426581 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_570426581 < colontmp__570426580)) break Label3;
              i_570425984 = i_570426581;
              result_570425972.kids.push(news_570425971.kids[chckIndx(i_570425984, 0, (news_570425971.kids).length - 1)]);;
              i_570426581 = addInt(i_570426581, 1);
            }
        };
      };
    }
    

  return result_570425972;

}

function buildToc_570425989(orig_570425990, types_570425991, procs_570425992) {
  var result_570425993 = null;

    var newStuff_570425998 = {heading: null, kids: [], doSort: true, sortId: 0};
    Label1: {
      var t_570426002 = null;
      var i_570426572 = 0;
      var L_570426573 = (types_570425991).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426572 < L_570426573)) break Label3;
            t_570426002 = types_570425991[chckIndx(i_570426572, 0, (types_570425991).length - 1)];
            var c_570426007 = {heading: t_570426002.cloneNode(true), kids: [], doSort: true, sortId: 0};
            t_570426002.__karaxMarker__ = true;
            Label4: {
              var p_570426011 = null;
              var i_570426569 = 0;
              var L_570426570 = (procs_570425992).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_570426569 < L_570426570)) break Label6;
                    p_570426011 = procs_570425992[chckIndx(i_570426569, 0, (procs_570425992).length - 1)];
                    if (!(p_570426011.hasOwnProperty('__karaxMarker__'))) {
                    var xx_570426012 = p_570426011.parentNode.getElementsByClassName("attachedType");
                    if ((((xx_570426012).length == 1) && (xx_570426012[chckIndx(0, 0, (xx_570426012).length - 1)].textContent == t_570426002.textContent))) {
                    var q_570426017 = tree_570425473("A", [text_570425497(p_570426011.title)]);
                    q_570426017.setAttribute("href", p_570426011.getAttribute("href"));
                    c_570426007.kids.push({heading: q_570426017, kids: [], sortId: 0, doSort: false});;
                    p_570426011.__karaxMarker__ = true;
                    }
                    
                    }
                    
                    i_570426569 = addInt(i_570426569, 1);
                    if (!(((procs_570425992).length == L_570426570))) {
                    failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            newStuff_570425998.kids.push(c_570426007);;
            i_570426572 = addInt(i_570426572, 1);
            if (!(((types_570425991).length == L_570426573))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570425993 = mergeTocs_570425969(orig_570425990, newStuff_570425998);

  return result_570425993;

}

function add_570425490(parent_570425491, kid_570425492) {
    if (((parent_570425491.nodeName == "TR") && ((kid_570425492.nodeName == "TD") || (kid_570425492.nodeName == "TH")))) {
    var k_570425493 = document.createElement("TD");
    k_570425493.appendChild(kid_570425492);
    parent_570425491.appendChild(k_570425493);
    }
    else {
    parent_570425491.appendChild(kid_570425492);
    }
    

  
}

function setClass_570425494(e_570425495, value_570425496) {
    e_570425495.setAttribute("class", value_570425496);

  
}

function toHtml_570425619(x_570425620, isRoot_570425621) {
    
function HEX3Aanonymous_570425639(a_570425640, b_570425641) {
      var result_570425642 = 0;

      BeforeRet: {
        if ((!((a_570425640.heading == null)) && !((b_570425641.heading == null)))) {
        var x_570425651 = a_570425640.heading.textContent;
        var y_570425652 = b_570425641.heading.textContent;
        if ((x_570425651 < y_570425652)) {
        result_570425642 = (-1);
        break BeforeRet;
        }
        
        if ((y_570425652 < x_570425651)) {
        result_570425642 = 1;
        break BeforeRet;
        }
        
        result_570425642 = 0;
        break BeforeRet;
        }
        else {
          result_570425642 = subInt(a_570425640.sortId, b_570425641.sortId);
          break BeforeRet;
        }
        
      };

      return result_570425642;

    }

  var result_570425622 = null;

  BeforeRet: {
    if ((x_570425620 == null)) {
    result_570425622 = null;
    break BeforeRet;
    }
    
    if (((x_570425620.kids).length == 0)) {
    if ((x_570425620.heading == null)) {
    result_570425622 = null;
    break BeforeRet;
    }
    
    result_570425622 = x_570425620.heading.cloneNode(true);
    break BeforeRet;
    }
    
    result_570425622 = tree_570425473("DIV", []);
    if ((!((x_570425620.heading == null)) && !(x_570425620.heading.hasOwnProperty('__karaxMarker__')))) {
    add_570425490(result_570425622, x_570425620.heading.cloneNode(true));
    }
    
    var ul_570425638 = tree_570425473("UL", []);
    if (isRoot_570425621) {
    setClass_570425494(ul_570425638, "simple simple-toc");
    }
    else {
    setClass_570425494(ul_570425638, "simple");
    }
    
    if (x_570425620.doSort) {
    x_570425620.kids.sort(HEX3Aanonymous_570425639);
    }
    
    Label1: {
      var k_570425664 = null;
      var i_570426588 = 0;
      var L_570426589 = (x_570425620.kids).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426588 < L_570426589)) break Label3;
            k_570425664 = x_570425620.kids[chckIndx(i_570426588, 0, (x_570425620.kids).length - 1)];
            var y_570425665 = toHtml_570425619(k_570425664, false);
            if (!((y_570425665 == null))) {
            add_570425490(ul_570425638, tree_570425473("LI", [y_570425665]));
            }
            
            i_570426588 = addInt(i_570426588, 1);
            if (!(((x_570425620.kids).length == L_570426589))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((ul_570425638.childNodes.length == 0))) {
    add_570425490(result_570425622, ul_570425638);
    }
    
    if ((result_570425622.childNodes.length == 0)) {
    result_570425622 = null;
    }
    
  };

  return result_570425622;

}

function replaceById_570425500(id_570425501, newTree_570425502) {
    var x_570425503 = document.getElementById(id_570425501);
    x_570425503.parentNode.replaceChild(newTree_570425502, x_570425503);
    newTree_570425502.id = id_570425501;

  
}

function togglevis_570426047(d_570426048) {
    if ((d_570426048.style.display == "none")) {
    d_570426048.style.display = "inline";
    }
    else {
      d_570426048.style.display = "none";
    }
    

  
}

function groupBy(value_570426050) {
    var toc_570426051 = document.getElementById("toc-list");
    if ((alternative_570426046[0] == null)) {
    var tt_570426059 = {heading: null, kids: [], sortId: 0, doSort: false};
    toToc_570425752(toc_570426051, tt_570426059);
    tt_570426059 = tt_570426059.kids[chckIndx(0, 0, (tt_570426059.kids).length - 1)];
    var types_570426064 = [[]];
    var procs_570426069 = [[]];
    extractItems_570425541(tt_570426059, "Types", types_570426064, 0);
    extractItems_570425541(tt_570426059, "Procs", procs_570426069, 0);
    extractItems_570425541(tt_570426059, "Converters", procs_570426069, 0);
    extractItems_570425541(tt_570426059, "Methods", procs_570426069, 0);
    extractItems_570425541(tt_570426059, "Templates", procs_570426069, 0);
    extractItems_570425541(tt_570426059, "Macros", procs_570426069, 0);
    extractItems_570425541(tt_570426059, "Iterators", procs_570426069, 0);
    var ntoc_570426070 = buildToc_570425989(tt_570426059, types_570426064[0], procs_570426069[0]);
    var x_570426071 = toHtml_570425619(ntoc_570426070, true);
    alternative_570426046[0] = tree_570425473("DIV", [x_570426071]);
    }
    
    if ((value_570426050 == "type")) {
    replaceById_570425500("tocRoot", alternative_570426046[0]);
    }
    else {
    replaceById_570425500("tocRoot", tree_570425473("DIV", []));
    }
    
    togglevis_570426047(document.getElementById("toc-list"));

  
}

function HEX5BHEX5D_738198763(s_738198766, x_738198767) {
  var result_738198768 = [];

    var a_738198770 = x_738198767.a;
    var L_738198772 = addInt(subInt(subInt((s_738198766).length, x_738198767.b), a_738198770), 1);
    result_738198768 = nimCopy(null, mnewString(chckRange(L_738198772, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_738198777 = 0;
      var i_570426598 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426598 < L_738198772)) break Label3;
            i_738198777 = i_570426598;
            result_738198768[chckIndx(i_738198777, 0, (result_738198768).length - 1)] = s_738198766[chckIndx(addInt(i_738198777, a_738198770), 0, (s_738198766).length - 1)];
            i_570426598 = addInt(i_570426598, 1);
          }
      };
    };

  return result_738198768;

}

function HEX2EHEX2E_973078630(a_973078633, b_973078634) {
  var result_973078637 = ({a: 0, b: 0});

    result_973078637 = nimCopy(result_973078637, {a: a_973078633, b: b_973078634}, NTI973078611);

  return result_973078637;

}
async function loadIndex_570426265() {
  var result_570426267 = null;

  BeforeRet: {
    var indexURL_570426273 = document.getElementById("indexLink").getAttribute("href");
    var rootURL_570426298 = HEX5BHEX5D_738198763(cstrToNimstr(indexURL_570426273), HEX2EHEX2E_973078630(0, 14));
    var resp_570426310 = (await (await fetch(indexURL_570426273)).text());
    var indexElem_570426311 = document.createElement("div");
    indexElem_570426311.innerHTML = resp_570426310;
    Label1: {
      var href_570426332 = null;
      var colontmp__570426592 = [];
      colontmp__570426592 = indexElem_570426311.getElementsByClassName("reference");
      var i_570426594 = 0;
      var L_570426595 = (colontmp__570426592).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426594 < L_570426595)) break Label3;
            href_570426332 = colontmp__570426592[chckIndx(i_570426594, 0, (colontmp__570426592).length - 1)];
            href_570426332.setAttribute("href", toJSStr((rootURL_570426298 || []).concat(cstrToNimstr(href_570426332.getAttribute("href")) || [])));
            db_570426088[0].push(href_570426332);;
            contents_570426089[0].push(href_570426332.getAttribute("data-doc-search-tag"));;
            i_570426594 = addInt(i_570426594, 1);
            if (!(((colontmp__570426592).length == L_570426595))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570426267 = undefined;
    break BeforeRet;
  };

  return result_570426267;

}

function then_570426441(future_570426444, onSuccess_570426445, onReject_570426446) {
  var result_570426447 = null;

  BeforeRet: {
    var ret_570426457 = null;
    ret_570426457 = future_570426444.then(onSuccess_570426445, onReject_570426446)
    result_570426447 = ret_570426457;
    break BeforeRet;
  };

  return result_570426447;

}

function nsuToLowerAsciiChar(c_738197589) {
  var result_738197590 = 0;

    if ((ConstSet2[c_738197589] != undefined)) {
    result_738197590 = (c_738197589 ^ 32);
    }
    else {
      result_738197590 = c_738197589;
    }
    

  return result_738197590;

}

function fuzzyMatch_721420304(pattern_721420305, str_721420306) {
              var Temporary4;
              var Temporary5;
                var Temporary6;
      var Temporary7;
        var Temporary8;

  var result_721420309 = {Field0: 0, Field1: false};

    var scoreState_721420310 = (-100);
    var headerMatched_721420311 = false;
    var unmatchedLeadingCharCount_721420312 = 0;
    var consecutiveMatchCount_721420313 = 0;
    var strIndex_721420314 = 0;
    var patIndex_721420315 = 0;
    var score_721420316 = 0;
    Label1: {
        Label2: while (true) {
        if (!((strIndex_721420314 < ((str_721420306) == null ? 0 : (str_721420306).length)) && (patIndex_721420315 < ((pattern_721420305) == null ? 0 : (pattern_721420305).length)))) break Label2;
          Label3: {
            var patternChar_721420319 = nsuToLowerAsciiChar(pattern_721420305.charCodeAt(chckIndx(patIndex_721420315, 0, (pattern_721420305).length - 1)));
            var strChar_721420320 = nsuToLowerAsciiChar(str_721420306.charCodeAt(chckIndx(strIndex_721420314, 0, (str_721420306).length - 1)));
            if ((ConstSet3[patternChar_721420319] != undefined)) {
            patIndex_721420315 = addInt(patIndex_721420315, 1);
            break Label3;
            }
            
            if ((ConstSet4[strChar_721420320] != undefined)) {
            strIndex_721420314 = addInt(strIndex_721420314, 1);
            break Label3;
            }
            
            if ((!(headerMatched_721420311) && (strChar_721420320 == 58))) {
            headerMatched_721420311 = true;
            scoreState_721420310 = (-100);
            score_721420316 = ((Math.floor((0.5 * score_721420316))) | 0);
            patIndex_721420315 = 0;
            strIndex_721420314 = addInt(strIndex_721420314, 1);
            break Label3;
            }
            
            if ((strChar_721420320 == patternChar_721420319)) {
            switch (scoreState_721420310) {
            case (-100):
            case 20:
              scoreState_721420310 = 10;
              break;
            case 0:
              scoreState_721420310 = 5;
              score_721420316 = addInt(score_721420316, scoreState_721420310);
              break;
            case 10:
            case 5:
              consecutiveMatchCount_721420313 = addInt(consecutiveMatchCount_721420313, 1);
              scoreState_721420310 = 5;
              score_721420316 = addInt(score_721420316, mulInt(5, consecutiveMatchCount_721420313));
              if ((scoreState_721420310 == 10)) {
              score_721420316 = addInt(score_721420316, 10);
              }
              
              var onBoundary_721420372 = (patIndex_721420315 == ((pattern_721420305) == null ? -1 : (pattern_721420305).length - 1));
              if ((!(onBoundary_721420372) && (strIndex_721420314 < ((str_721420306) == null ? -1 : (str_721420306).length - 1)))) {
              var nextPatternChar_721420373 = nsuToLowerAsciiChar(pattern_721420305.charCodeAt(chckIndx(addInt(patIndex_721420315, 1), 0, (pattern_721420305).length - 1)));
              var nextStrChar_721420374 = nsuToLowerAsciiChar(str_721420306.charCodeAt(chckIndx(addInt(strIndex_721420314, 1), 0, (str_721420306).length - 1)));
              if (!!((ConstSet5[nextStrChar_721420374] != undefined))) Temporary4 = false; else {                Temporary4 = !((nextStrChar_721420374 == nextPatternChar_721420373));              }              onBoundary_721420372 = Temporary4;
              }
              
              if (onBoundary_721420372) {
              scoreState_721420310 = 20;
              score_721420316 = addInt(score_721420316, scoreState_721420310);
              }
              
              break;
            case (-1):
            case (-3):
              if (!((ConstSet6[str_721420306.charCodeAt(chckIndx(subInt(strIndex_721420314, 1), 0, (str_721420306).length - 1))] != undefined))) Temporary5 = true; else {                if (!(ConstSet7[str_721420306.charCodeAt(chckIndx(subInt(strIndex_721420314, 1), 0, (str_721420306).length - 1))] != undefined)) Temporary6 = false; else {                  Temporary6 = (ConstSet8[str_721420306.charCodeAt(chckIndx(strIndex_721420314, 0, (str_721420306).length - 1))] != undefined);                }                Temporary5 = Temporary6;              }              var isLeadingChar_721420398 = Temporary5;
              if (isLeadingChar_721420398) {
              scoreState_721420310 = 10;
              }
              else {
                scoreState_721420310 = 0;
                score_721420316 = addInt(score_721420316, scoreState_721420310);
              }
              
              break;
            }
            patIndex_721420315 = addInt(patIndex_721420315, 1);
            }
            else {
              switch (scoreState_721420310) {
              case (-100):
                scoreState_721420310 = (-3);
                score_721420316 = addInt(score_721420316, scoreState_721420310);
                break;
              case 5:
                scoreState_721420310 = (-1);
                score_721420316 = addInt(score_721420316, scoreState_721420310);
                consecutiveMatchCount_721420313 = 0;
                break;
              case (-3):
                if ((unmatchedLeadingCharCount_721420312 < 3)) {
                scoreState_721420310 = (-3);
                score_721420316 = addInt(score_721420316, scoreState_721420310);
                }
                
                unmatchedLeadingCharCount_721420312 = addInt(unmatchedLeadingCharCount_721420312, 1);
                break;
              default: 
                scoreState_721420310 = (-1);
                score_721420316 = addInt(score_721420316, scoreState_721420310);
                break;
              }
            }
            
            strIndex_721420314 = addInt(strIndex_721420314, 1);
          };
        }
    };
      if (!(patIndex_721420315 == ((pattern_721420305) == null ? 0 : (pattern_721420305).length))) Temporary7 = false; else {        if ((strIndex_721420314 == ((str_721420306) == null ? 0 : (str_721420306).length))) Temporary8 = true; else {          Temporary8 = !((ConstSet9[str_721420306.charCodeAt(chckIndx(strIndex_721420314, 0, (str_721420306).length - 1))] != undefined));        }        Temporary7 = Temporary8;      }    if (Temporary7) {
    score_721420316 = addInt(score_721420316, 10);
    }
    
    var colontmp__570426611 = nimMax(0, score_721420316);
    var colontmp__570426612 = (0 < score_721420316);
    result_721420309 = nimCopy(result_721420309, {Field0: colontmp__570426611, Field1: colontmp__570426612}, NTI721420302);

  return result_721420309;

}

function escapeCString_570426090(x_570426091, x_570426091_Idx) {
    var s_570426092 = [];
    Label1: {
      var c_570426093 = 0;
      var iHEX60gensym6_570426615 = 0;
      var nHEX60gensym6_570426616 = ((x_570426091[x_570426091_Idx]) == null ? 0 : (x_570426091[x_570426091_Idx]).length);
      Label2: {
          Label3: while (true) {
          if (!(iHEX60gensym6_570426615 < nHEX60gensym6_570426616)) break Label3;
            c_570426093 = x_570426091[x_570426091_Idx].charCodeAt(chckIndx(iHEX60gensym6_570426615, 0, (x_570426091[x_570426091_Idx]).length - 1));
            switch (c_570426093) {
            case 60:
              s_570426092.push.apply(s_570426092, [38,108,116,59]);;
              break;
            case 62:
              s_570426092.push.apply(s_570426092, [38,103,116,59]);;
              break;
            default: 
              addChar(s_570426092, c_570426093);;
              break;
            }
            iHEX60gensym6_570426615 = addInt(iHEX60gensym6_570426615, 1);
          }
      };
    };
    x_570426091[x_570426091_Idx] = toJSStr(s_570426092);

  
}

function dosearch_570426094(value_570426095) {
    
function HEX3Aanonymous_570426122(a_570426127, b_570426128) {
      var result_570426133 = 0;

        result_570426133 = subInt(b_570426128["Field1"], a_570426127["Field1"]);

      return result_570426133;

    }

  var result_570426096 = null;

  BeforeRet: {
    if (((db_570426088[0]).length == 0)) {
    break BeforeRet;
    }
    
    var ul_570426100 = tree_570425473("UL", []);
    result_570426096 = tree_570425473("DIV", []);
    setClass_570425494(result_570426096, "search_results");
    var matches_570426105 = [];
    Label1: {
      var i_570426113 = 0;
      var colontmp__570426602 = 0;
      colontmp__570426602 = (db_570426088[0]).length;
      var i_570426603 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426603 < colontmp__570426602)) break Label3;
            i_570426113 = i_570426603;
            Label4: {
              var c_570426114 = contents_570426089[0][chckIndx(i_570426113, 0, (contents_570426089[0]).length - 1)];
              if (((c_570426114 == "Examples") || (c_570426114 == "PEG construction"))) {
              break Label4;
              }
              
              var tmpTuple_570426115 = fuzzyMatch_721420304(value_570426095, c_570426114);
              var score_570426116 = tmpTuple_570426115["Field0"];
              var matched_570426117 = tmpTuple_570426115["Field1"];
              if (matched_570426117) {
              matches_570426105.push({Field0: db_570426088[0][chckIndx(i_570426113, 0, (db_570426088[0]).length - 1)], Field1: score_570426116});;
              }
              
            };
            i_570426603 = addInt(i_570426603, 1);
          }
      };
    };
    matches_570426105.sort(HEX3Aanonymous_570426122);
    Label5: {
      var i_570426150 = 0;
      var colontmp__570426606 = 0;
      colontmp__570426606 = nimMin((matches_570426105).length, 29);
      var i_570426607 = 0;
      Label6: {
          Label7: while (true) {
          if (!(i_570426607 < colontmp__570426606)) break Label7;
            i_570426150 = i_570426607;
            matches_570426105[chckIndx(i_570426150, 0, (matches_570426105).length - 1)]["Field0"].innerHTML = matches_570426105[chckIndx(i_570426150, 0, (matches_570426105).length - 1)]["Field0"].getAttribute("data-doc-search-tag");
            escapeCString_570426090(matches_570426105[chckIndx(i_570426150, 0, (matches_570426105).length - 1)]["Field0"], "innerHTML");
            add_570425490(ul_570426100, tree_570425473("LI", [matches_570426105[chckIndx(i_570426150, 0, (matches_570426105).length - 1)]["Field0"]]));
            i_570426607 = addInt(i_570426607, 1);
          }
      };
    };
    if ((ul_570426100.childNodes.length == 0)) {
    add_570425490(result_570426096, tree_570425473("B", [text_570425497("no search results")]));
    }
    else {
      add_570425490(result_570426096, tree_570425473("B", [text_570425497("search results")]));
      add_570425490(result_570426096, ul_570426100);
    }
    
  };

  return result_570426096;

}

function search() {
    
function wrapper_570426426() {
        var elem_570426427 = document.getElementById("searchInput");
        var value_570426428 = elem_570426427.value;
        if (!((((value_570426428) == null ? 0 : (value_570426428).length) == 0))) {
        if ((oldtoc_570426421[0] == null)) {
        oldtoc_570426421[0] = document.getElementById("tocRoot");
        }
        
        var results_570426432 = dosearch_570426094(value_570426428);
        replaceById_570425500("tocRoot", results_570426432);
        }
        else {
        if (!((oldtoc_570426421[0] == null))) {
        replaceById_570425500("tocRoot", oldtoc_570426421[0]);
        }
        }

      
    }

    if ((loadIndexFut_570426424[0] == null)) {
    loadIndexFut_570426424[0] = loadIndex_570426265();
    var _ = then_570426441(loadIndexFut_570426424[0], wrapper_570426426, null);
    }
    
    if (!((timer_570426422[0] == null))) {
    clearTimeout(timer_570426422[0]);
    }
    
    timer_570426422[0] = setTimeout(wrapper_570426426, 400);

  
}

function copyToClipboard() {
    
    function updatePreTags() {

      const allPreTags = document.querySelectorAll("pre")
    
      allPreTags.forEach((e) => {
      
          const div = document.createElement("div")
          div.classList.add("copyToClipBoard")
    
          const preTag = document.createElement("pre")
          preTag.innerHTML = e.innerHTML
    
          const button = document.createElement("button")
          button.value = e.textContent.replace('...', '') 
          button.classList.add("copyToClipBoardBtn")
          button.style.cursor = "pointer"
    
          div.appendChild(preTag)
          div.appendChild(button)
    
          e.outerHTML = div.outerHTML
      
      })
    }


    function copyTextToClipboard(e) {
        const clipBoardContent = e.target.value
        navigator.clipboard.writeText(clipBoardContent).then(function() {
            e.target.style.setProperty("--clipboard-image", "var(--clipboard-image-selected)")
        }, function(err) {
            console.error("Could not copy text: ", err);
        });
    }

    window.addEventListener("click", (e) => {
        if (e.target.classList.contains("copyToClipBoardBtn")) {
            copyTextToClipboard(e)
          }
    })

    window.addEventListener("mouseover", (e) => {
        if (e.target.nodeName === "PRE") {
            e.target.nextElementSibling.style.setProperty("--clipboard-image", "var(--clipboard-image-normal)")
        }
    })
    
    window.addEventListener("DOMContentLoaded", updatePreTags)

    

  
}
var Temporary1;
var t_570425383 = window.localStorage.getItem("theme");
if ((t_570425383 == null)) {
Temporary1 = "auto";
}
else {
Temporary1 = t_570425383;
}

setTheme(Temporary1);
var alternative_570426046 = [null];
var db_570426088 = [[]];
var contents_570426089 = [[]];
var oldtoc_570426421 = [null];
var timer_570426422 = [null];
var loadIndexFut_570426424 = [null];
copyToClipboard();
window.addEventListener("DOMContentLoaded", onDOMLoaded, false);
